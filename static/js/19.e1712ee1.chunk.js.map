{"version":3,"sources":["components/PersonalChat/PersonalChat.js","stores/PersonalChatStore.js"],"names":["PersonalChat","props","_this","Object","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Chat_Chat__WEBPACK_IMPORTED_MODULE_7__","assign","chatStore","PersonalChatStore","Component","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","init","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_Apps_projectmegaindia_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","wrap","_context","prev","next","getChatsMetas","chatMeta","sent","isReady","emit","stop","getChatMetaIds","_callee2","_context2","abrupt","getField","_ref3","_callee3","objectID","key","snapshot","_context3","firebase","ready","database","ref","concat","once","val","_x","_x2","apply","arguments","getSingleChatMeta","_ref4","_callee4","_ref5","_ref6","title","slug","isLeaf","_context4","Promise","all","map","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","ChatMeta","_x3","getChatMetaItem","otherUidSlug","myUid","AuthStore","user","uid","uid1","uid2","trySetChatToUserData","_callee5","objectIDs","_context5","getChatSubjectsFlat","_callee6","_context6","slice","sort","amountOfSlashesSort","getChatSubjects","_callee7","subjectsArray","subjects","_context7","forEach","subject","nestChatSubject","getChatThread","_ref10","_callee8","chatThread","_context8","Error","threads","ChatThread","fromChatMeta","_x4","getAllPersonalChats","_callee9","chats","_context9","readyPromise","isAuthenticated","keys","chat","filter","blocked","_ref12","_callee10","otherUserUid","_context10","set","_x5","AbstractChatStore","__webpack_exports__"],"mappings":"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","file":"static/js/19.e1712ee1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './PersonalChat.css';\nimport Chat from '../Chat/Chat';\nimport PersonalChatStore from '../../stores/PersonalChatStore';\n\nclass PersonalChat extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n        };\n    }\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        return (\n            <div className=\"PersonalChat\">\n                <Chat {...this.props} chatStore={PersonalChatStore} />\n            </div>\n        );\n    }\n}\n\nexport default PersonalChat;\n","import { EventEmitter } from \"events\";\r\nimport { ChatMeta } from \"../lib/chats/chat-meta\";\r\nimport { ChatThread } from \"../lib/chats/chat-thread\";\r\nimport AbstractChatStore from \"./AbstractChatStore\";\r\nimport AuthStore from \"./AuthStore\";\r\nimport firebase from '../lib/firebase';\r\n\r\nclass PersonalChatStore extends AbstractChatStore {\r\n    constructor() {\r\n        super();\r\n\r\n        this.threads = {};\r\n        this.init();\r\n    }\r\n\r\n    init = async () => {\r\n        this.chatMeta = await this.getChatsMetas();\r\n        this.isReady = true;\r\n        this.emit('change');\r\n    }\r\n\r\n    getChatMetaIds = async () => {\r\n        return [];\r\n    }\r\n\r\n    getField = async (objectID, key) => {\r\n        await firebase.ready;\r\n        const snapshot = await firebase.database().ref(`/chats/personal/${objectID}/${key}`).once('value');\r\n        return snapshot.val();\r\n    }\r\n\r\n    getSingleChatMeta = async (objectID) => {\r\n        await firebase.ready;\r\n        const [title, slug, isLeaf] = await Promise.all(\r\n            ['title', 'slug', 'isLeaf'].map(key => this.getField(objectID, key))\r\n        );\r\n        return new ChatMeta(title, isLeaf, slug, objectID);\r\n    }\r\n\r\n    getChatMetaItem = otherUidSlug => {\r\n        const myUid = AuthStore.user.uid;\r\n        const uid1 = myUid > otherUidSlug ? otherUidSlug : myUid;\r\n        const uid2 = myUid > otherUidSlug ? myUid : otherUidSlug;\r\n        this.trySetChatToUserData(otherUidSlug);\r\n        return {\r\n            title: \"\",\r\n            isLeaf: false,\r\n            slug: otherUidSlug,\r\n            objectID: `${uid1}/${uid2}`\r\n        };\r\n    }\r\n\r\n    getChatsMetas = async () => {\r\n        await firebase.ready;\r\n        const objectIDs = await this.getChatMetaIds();\r\n        return await Promise.all(objectIDs.map(this.getSingleChatMeta));\r\n    };\r\n\r\n    getChatSubjectsFlat = async () => {\r\n        const chatMeta = await this.getChatsMetas();\r\n        return chatMeta.slice().sort(this.amountOfSlashesSort);\r\n    };\r\n\r\n    getChatSubjects = async () => {\r\n        const subjectsArray = await this.getChatSubjectsFlat();\r\n        const subjects = [];\r\n        subjectsArray.forEach(subject => this.nestChatSubject(subject, subjects));\r\n        return subjects;\r\n    };\r\n\r\n    getChatThread = async chatMeta => {\r\n        if (chatMeta === null) throw new Error('Invalid chat meta');\r\n        if (this.threads[chatMeta.objectID]) return this.threads[chatMeta.objectID];\r\n        await firebase.ready;\r\n        const chatThread = ChatThread.fromChatMeta(chatMeta, firebase.database().ref(`/chats/personal/${chatMeta.objectID}/thread`));\r\n        this.threads[chatMeta.objectID] = chatThread;\r\n        return chatThread;\r\n    };\r\n\r\n    getAllPersonalChats = async () => {\r\n        await firebase.ready;\r\n        await AuthStore.readyPromise;\r\n        const loggedIn = AuthStore.isAuthenticated;\r\n        if (!loggedIn) return null;\r\n        const snapshot = await firebase.database()\r\n            .ref(`/users/${AuthStore.user.uid}/personalchatswithusers`)\r\n            .once('value');\r\n        const chats = snapshot.val() || {};\r\n        return Object.keys(chats).map(key => {\r\n            const chat = chats[key];\r\n            chat.uid = key;\r\n            return chat;\r\n        }).filter(chat => chat.blocked !== true);\r\n    }\r\n\r\n    trySetChatToUserData = async (otherUserUid) => {\r\n        await firebase.ready;\r\n        await AuthStore.readyPromise;\r\n        const loggedIn = AuthStore.isAuthenticated;\r\n        if (!loggedIn) return false;\r\n        const snapshot = await firebase.database()\r\n            .ref(`/users/${AuthStore.user.uid}/personalchatswithusers/${otherUserUid}`)\r\n            .once('value');\r\n        if (snapshot.val() === null) {\r\n            await await firebase.database()\r\n                .ref(`/users/${AuthStore.user.uid}/personalchatswithusers/${otherUserUid}`)\r\n                .set({\r\n                    blocked: false\r\n                });\r\n            const snapshot2 = await firebase.database()\r\n                .ref(`/users/${otherUserUid}/personalchatswithusers/${AuthStore.user.uid}`)\r\n                .once('value');\r\n            if (snapshot2.val() === null) {\r\n                await await firebase.database()\r\n                    .ref(`/users/${otherUserUid}/personalchatswithusers/${AuthStore.user.uid}`)\r\n                    .set({\r\n                        blocked: false\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new PersonalChatStore();\r\n"],"sourceRoot":""}