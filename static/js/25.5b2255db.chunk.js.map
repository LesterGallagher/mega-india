{"version":3,"sources":["components/RoutesOffersOverview/RoutesOffersOverview.module.css","components/RoutesOffersOverview/RoutesOffersOverview.js"],"names":["module","exports","RoutesOffersOverview","props","_this","Object","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","getRouteOrdersInArea","_ref","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Apps_projectmegaindia_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","area","box","lesserGeopoint","greaterGeopoint","query","snapshot","allLocs","wrap","_context","prev","next","utils","center","radius","firebase","firestore","GeoPoint","swCorner","latitude","longitude","neCorner","collection","where","orderBy","get","sent","forEach","loc","data","distanceFromCenter","location","push","abrupt","t0","console","error","Error","stop","_x","apply","arguments","componentWillMount","_callee2","routesList","_context2","getRouteOrders","setState","_callee3","_context3","objectID","id","state","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react_onsenui__WEBPACK_IMPORTED_MODULE_10__","className","renderToolbar","_ToolbarNormal_ToolbarNormal__WEBPACK_IMPORTED_MODULE_11__","name","style","margin","padding","_RoutesList_RoutesList__WEBPACK_IMPORTED_MODULE_12__","Component","withFirebase"],"mappings":"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","file":"static/js/25.5b2255db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoutesOffersOverview\":\"RoutesOffersOverview_RoutesOffersOverview__CV76E\"};","import React, { Component } from 'react';\nimport styles from './RoutesOffersOverview.module.css';\nimport * as utils from '../../lib/geo';\nimport { ListItem, List, ListHeader, Page, Toolbar, Card } from 'react-onsenui';\nimport ToolbarNormal from '../ToolbarNormal/ToolbarNormal';\nimport RoutesList from '../RoutesList/RoutesList';\nimport { withFirebase } from '../Firebase/context';\n\nclass RoutesOffersOverview extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n        };\n    }\n\n    /**\n    * Get locations within a bounding box defined by a center point and distance from from the center point to the side of the box;\n    *\n    * @param {Object} area an object that represents the bounding box\n    *    around a point in which locations should be retrieved\n    * @param {Object} area.center an object containing the latitude and\n    *    longitude of the center point of the bounding box\n    * @param {number} area.center.latitude the latitude of the center point\n    * @param {number} area.center.longitude the longitude of the center point\n    * @param {number} area.radius (in kilometers) the radius of a circle\n    *    that is inscribed in the bounding box;\n    *    This could also be described as half of the bounding box's side length.\n    * @return {Promise} a Promise that fulfills with an array of all the\n    *    retrieved locations\n    */\n    getRouteOrdersInArea = async (area) => {\n        // calculate the SW and NE corners of the bounding box to query for\n        const box = utils.boundingBoxCoordinates(area.center, area.radius);\n\n        // construct the GeoPoints\n        const lesserGeopoint = new this.props.firebase.firestore.GeoPoint(box.swCorner.latitude, box.swCorner.longitude);\n        const greaterGeopoint = new this.props.firebase.firestore.GeoPoint(box.neCorner.latitude, box.neCorner.longitude);\n\n        // construct the Firestore query\n        let query = this.props.firebase.firestore().collection('routeorders')\n            .where('start_location', '>', lesserGeopoint)\n            .where('start_location', '<', greaterGeopoint)\n            .orderBy(\"timestamp\");\n\n        // return a Promise that fulfills with the locations\n        try {\n            const snapshot = await query.get();\n            const allLocs = []; // used to hold all the loc data\n            snapshot.forEach((loc) => {\n                // get the data\n                const data = loc.data();\n                // calculate a distance from the center\n                data.distanceFromCenter = utils.distance(area.center, data.location);\n                // add to the array\n                allLocs.push(data);\n            });\n            return allLocs;\n        } catch (err) {\n            console.error(err);\n            throw new Error('Error while retrieving events');\n        };\n    }\n\n    componentWillMount = async () => {\n        const routesList = await this.getRouteOrders();\n        this.setState({\n            routesList: routesList\n        });\n    }\n\n    getRouteOrders = async () => {\n        let query = this.props.firebase.firestore().collection('routeorders')\n            .orderBy(\"timestamp\");\n\n        try {\n            const snapshot = await query.get();\n            const allLocs = []; // used to hold all the loc data\n            snapshot.forEach((loc) => {\n                const data = loc.data();\n                data.objectID = loc.id;\n                allLocs.push(data);\n            });\n            return allLocs;\n        } catch (err) {\n            console.error(err);\n            throw new Error('Error while retrieving events');\n        };\n    }\n\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        return (\n            <Page className=\"RoutesOffersOverview\" renderToolbar={() => <ToolbarNormal name=\"Route lijst\" />}>\n                <h5 style={{ margin: 10 }}>Laatste routes</h5>\n                <Card style={{ padding: 0}}>\n                    <List>\n                        <RoutesList routesList={this.state.routesList || []} />\n                    </List>\n                </Card>\n            </Page>\n        );\n    }\n}\n\nexport default withFirebase(RoutesOffersOverview);\n"],"sourceRoot":""}