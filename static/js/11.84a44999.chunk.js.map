{"version":3,"sources":["lib/geo.js","components/RoutesList/RoutesList.js","components/RoutesOffersOverview/RoutesOffersOverview.js","config.js","components/NavbarMenuIcon/NavbarMenuIcon.module.css","components/NavbarMenuIcon/NavbarMenuIcon.js","components/ToolbarNormal/ToolbarNormal.js","components/RoutesOffersOverview/RoutesOffersOverview.module.css","components/RoutesList/RoutesList.module.css"],"names":["degreesToRadians","degrees","Math","PI","distance","location1","location2","latDelta","latitude","lonDelta","longitude","a","sin","cos","atan2","sqrt","boundingBoxCoordinates","center","radius","latDegrees","latitudeNorth","min","latitudeSouth","max","longDegsNorth","metersToLongitudeDegrees","longDegsSouth","longDegs","swCorner","wrapLongitude","neCorner","radians","deltaDeg","adjusted","RoutesList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","routeOrder","e","history","push","id","renderItem","key","url","concat","encodeURIComponent","overview_polyline","config","googleMapsAPIKey","replace","react_default","createElement","react_onsenui","tappable","className","styles","listItem","onClick","image","src","alt","title","fromTo","start_address","end_address","summary","description","senderName","timestamp","format","navigator","language","state","routesList","map","Component","withRouter","RoutesOffersOverview","getRouteOrdersInArea","_ref","asyncToGenerator","regenerator_default","mark","_callee","area","box","lesserGeopoint","greaterGeopoint","query","snapshot","allLocs","wrap","_context","prev","next","utils","firebase","firestore","GeoPoint","collection","where","orderBy","get","sent","forEach","loc","data","distanceFromCenter","location","abrupt","t0","console","error","Error","stop","_x","apply","arguments","componentWillMount","_callee2","_context2","getRouteOrders","setState","_callee3","_context3","log","renderToolbar","ToolbarNormal","name","style","margin","padding","components_RoutesList_RoutesList","__webpack_exports__","module","exports","svg","middleBar","NavbarMenuIcon","viewBox","d","handleMenuClick","window","toggleOnsMenu","render","components_NavbarMenuIcon_NavbarMenuIcon","right"],"mappings":"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","file":"static/js/11.84a44999.chunk.js","sourcesContent":["const R = 6378.137; // Radius of earth in KM\r\n\r\nexport const degreesToRadians = (degrees) => {return (degrees * Math.PI)/180;}\r\n\r\nexport const latLngDist = (lat1, lon1, lat2, lon2) => {\r\n    var dLat = (lat2 * Math.PI) / 180 - (lat1 * Math.PI) / 180;\r\n    var dLon = (lon2 * Math.PI) / 180 - (lon1 * Math.PI) / 180;\r\n    var a =\r\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos((lat1 * Math.PI) / 180) *\r\n        Math.cos((lat2 * Math.PI) / 180) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c;\r\n    return d * 1000; // meters\r\n};\r\n\r\nexport const meterPerLatLng = (lat, lng) => {\r\n    lat *= 0.0174532925;\r\n    lng *= 0.0174532925;\r\n    return [\r\n        111132.954 - 559.822 * Math.cos(2 * lng) + 1.175 * Math.cos(4 * lng),\r\n        111132.954 * Math.cos(lat)\r\n    ];\r\n};\r\n\r\nexport const bearing = (lat1, lng1, lat2, lng2) => {\r\n    var dLon = lng2 - lng1;\r\n    var y = Math.sin(dLon) * Math.cos(lat2);\r\n    var x =\r\n        Math.cos(lat1) * Math.sin(lat2) -\r\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(dLon);\r\n    var brng = toDeg(Math.atan2(y, x));\r\n    return 360 - ((brng + 360) % 360);\r\n};\r\n\r\nexport const toDeg = rad => (rad * 180) / Math.PI;\r\nexport const toRad = deg => (deg * Math.PI) / 180;\r\n\r\nexport const distance = (location1, location2) => {\r\n    const radius = 6371; // Earth's radius in kilometers\r\n    const latDelta = degreesToRadians(location2.latitude - location1.latitude);\r\n    const lonDelta = degreesToRadians(location2.longitude - location1.longitude);\r\n  \r\n    const a = (Math.sin(latDelta / 2) * Math.sin(latDelta / 2)) +\r\n            (Math.cos(degreesToRadians(location1.latitude)) * Math.cos(degreesToRadians(location2.latitude)) *\r\n            Math.sin(lonDelta / 2) * Math.sin(lonDelta / 2));\r\n  \r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  \r\n    return radius * c;\r\n  }\r\n\r\nexport const boundingBoxCoordinates = (center, radius) => {\r\n    const KM_PER_DEGREE_LATITUDE = 110.574;\r\n    const latDegrees = radius / KM_PER_DEGREE_LATITUDE;\r\n    const latitudeNorth = Math.min(90, center.latitude + latDegrees);\r\n    const latitudeSouth = Math.max(-90, center.latitude - latDegrees);\r\n    // calculate longitude based on current latitude\r\n    const longDegsNorth = metersToLongitudeDegrees(radius, latitudeNorth);\r\n    const longDegsSouth = metersToLongitudeDegrees(radius, latitudeSouth);\r\n    const longDegs = Math.max(longDegsNorth, longDegsSouth);\r\n    return {\r\n        swCorner: { // bottom-left (SW corner)\r\n            latitude: latitudeSouth,\r\n            longitude: wrapLongitude(center.longitude - longDegs),\r\n        },\r\n        neCorner: { // top-right (NE corner)\r\n            latitude: latitudeNorth,\r\n            longitude: wrapLongitude(center.longitude + longDegs),\r\n        },\r\n    };\r\n}\r\nconst metersToLongitudeDegrees = (distance, latitude) => {\r\n    const EARTH_EQ_RADIUS = 6378137.0;\r\n    // this is a super, fancy magic number that the GeoFire lib can explain (maybe)\r\n    const E2 = 0.00669447819799;\r\n    const EPSILON = 1e-12;\r\n    const radians = degreesToRadians(latitude);\r\n    const num = Math.cos(radians) * EARTH_EQ_RADIUS * Math.PI / 180;\r\n    const denom = 1 / Math.sqrt(1 - E2 * Math.sin(radians) * Math.sin(radians));\r\n    const deltaDeg = num * denom;\r\n    if (deltaDeg < EPSILON) {\r\n        return distance > 0 ? 360 : 0;\r\n    }\r\n    // else\r\n    return Math.min(360, distance / deltaDeg);\r\n}\r\n\r\n/**\r\n * Wraps the longitude to [-180,180].\r\n *\r\n * @param {number} longitude The longitude to wrap.\r\n * @return {number} longitude The resulting longitude.\r\n */\r\nexport const wrapLongitude = (longitude) => {\r\n    if (longitude <= 180 && longitude >= -180) {\r\n        return longitude;\r\n    }\r\n    const adjusted = longitude + 180;\r\n    if (adjusted > 0) {\r\n        return (adjusted % 360) - 180;\r\n    }\r\n    // else\r\n    return 180 - (-adjusted % 360);\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport styles from './RoutesList.module.css';\nimport firebase from '../../lib/firebase';\nimport * as utils from '../../lib/geo';\nimport { ListItem, List, ListHeader, ListTitle, Icon, Fab } from 'react-onsenui';\nimport config from '../../config';\nimport { format } from 'timeago.js';\nimport { withRouter } from 'react-router-dom';\n\nclass RoutesList extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n\n        };\n    }\n\n    handleClick = routeOrder => e => {\n        this.props.history.push('/route/' + routeOrder.id);\n    }\n\n    renderItem = (routeOrder, key) => {\n        const url = `https://maps.googleapis.com/maps/api/staticmap?size=200x130\n            &path=enc%3A${encodeURIComponent(routeOrder.overview_polyline)}\n            &key=${config.googleMapsAPIKey}`.replace(/\\s/g, '');\n        return (\n            <ListItem tappable key={key} className={styles.listItem} onClick={this.handleClick(routeOrder)}>\n                <div className=\"left\">\n                    <img className={styles.image} src={url} alt=\"Route thumbnail\" />\n                </div>\n                <div className={'center ' + styles.center}>\n                    <div>\n                        <h3 className={styles.title}>{routeOrder.title}</h3>\n                        <p className={styles.fromTo}>Van {routeOrder.start_address} naar {routeOrder.end_address}</p>\n                        <p className={styles.summary}>{routeOrder.summary}</p>\n                        <p className={styles.description}>{routeOrder.description}</p>\n                        <p className={styles.senderName}>{routeOrder.senderName}</p>\n                        <p className={styles.timestamp}>{format(routeOrder.timestamp, navigator.language || 'nl')}</p>\n                    </div>\n                </div>\n            </ListItem>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"RoutesList\">\n                {(this.props.routesList || []).map(this.renderItem)}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(RoutesList);\n","import React, { Component } from 'react';\nimport styles from './RoutesOffersOverview.module.css';\nimport firebase from '../../lib/firebase';\nimport * as utils from '../../lib/geo';\nimport { ListItem, List, ListHeader, Page, Toolbar, Card } from 'react-onsenui';\nimport ToolbarNormal from '../ToolbarNormal/ToolbarNormal';\nimport RoutesList from '../RoutesList/RoutesList';\n\nclass RoutesOffersOverview extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n        };\n\n    }\n\n    /**\n    * Get locations within a bounding box defined by a center point and distance from from the center point to the side of the box;\n    *\n    * @param {Object} area an object that represents the bounding box\n    *    around a point in which locations should be retrieved\n    * @param {Object} area.center an object containing the latitude and\n    *    longitude of the center point of the bounding box\n    * @param {number} area.center.latitude the latitude of the center point\n    * @param {number} area.center.longitude the longitude of the center point\n    * @param {number} area.radius (in kilometers) the radius of a circle\n    *    that is inscribed in the bounding box;\n    *    This could also be described as half of the bounding box's side length.\n    * @return {Promise} a Promise that fulfills with an array of all the\n    *    retrieved locations\n    */\n    getRouteOrdersInArea = async (area) => {\n        // calculate the SW and NE corners of the bounding box to query for\n        const box = utils.boundingBoxCoordinates(area.center, area.radius);\n\n        // construct the GeoPoints\n        const lesserGeopoint = new firebase.firestore.GeoPoint(box.swCorner.latitude, box.swCorner.longitude);\n        const greaterGeopoint = new firebase.firestore.GeoPoint(box.neCorner.latitude, box.neCorner.longitude);\n\n        // construct the Firestore query\n        let query = firebase.firestore().collection('routeorders')\n            .where('start_location', '>', lesserGeopoint)\n            .where('start_location', '<', greaterGeopoint)\n            .orderBy(\"timestamp\");\n\n        // return a Promise that fulfills with the locations\n        try {\n            const snapshot = await query.get();\n            const allLocs = []; // used to hold all the loc data\n            snapshot.forEach((loc) => {\n                // get the data\n                const data = loc.data();\n                // calculate a distance from the center\n                data.distanceFromCenter = utils.distance(area.center, data.location);\n                // add to the array\n                allLocs.push(data);\n            });\n            return allLocs;\n        } catch (err) {\n            console.error(err);\n            return new Error('Error while retrieving events');\n        };\n    }\n\n    componentWillMount = async () => {\n        const routesList = await this.getRouteOrders();\n        this.setState({\n            routesList: routesList\n        });\n    }\n\n    getRouteOrders = async () => {\n        let query = firebase.firestore().collection('routeorders')\n            .orderBy(\"timestamp\");\n\n        try {\n            const snapshot = await query.get();\n            const allLocs = []; // used to hold all the loc data\n            snapshot.forEach((loc) => {\n                const data = loc.data();\n                data.id = loc.id;\n                allLocs.push(data);\n            });\n            return allLocs;\n        } catch (err) {\n            console.error(err);\n            return new Error('Error while retrieving events');\n        };\n    }\n\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        console.log(this.state.routesList);\n        return (\n            <Page className=\"RoutesOffersOverview\" renderToolbar={() => <ToolbarNormal name=\"Route lijst\" />}>\n                <h2 style={{ margin: 10 }}>Laatste routes</h2>\n                <Card style={{ padding: 0}}>\n                    <List>\n                        <RoutesList routesList={this.state.routesList || []} />\n                    </List>\n                </Card>\n            </Page>\n        );\n    }\n}\n\nexport default RoutesOffersOverview;\n","export default {\r\n    googleMapsAPIKey: 'AIzaSyCRPLyg-5qth7AakbK6dYymVwHzja2HZI0'\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"NavbarMenuIcon_svg__lO4v7\",\"middleBar\":\"NavbarMenuIcon_middleBar__7DEMy\"};","import React, {Component} from 'react';\r\nimport styles from './NavbarMenuIcon.module.css'\r\n\r\nclass NavbarMenuIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <svg className={styles.svg} viewBox=\"0 0 512 512\">\r\n                <path className={styles.middleBar} d=\"M491.318,235.318H20.682C9.26,235.318,0,244.577,0,256s9.26,20.682,20.682,20.682h470.636\r\n                    c11.423,0,20.682-9.259,20.682-20.682C512,244.578,502.741,235.318,491.318,235.318z\"/>\r\n                <path d=\"M491.318,78.439H20.682C9.26,78.439,0,87.699,0,99.121c0,11.422,9.26,20.682,20.682,20.682h470.636\r\n                    c11.423,0,20.682-9.26,20.682-20.682C512,87.699,502.741,78.439,491.318,78.439z\"/>\r\n                <path d=\"M491.318,392.197H20.682C9.26,392.197,0,401.456,0,412.879s9.26,20.682,20.682,20.682h470.636\r\n                    c11.423,0,20.682-9.259,20.682-20.682S502.741,392.197,491.318,392.197z\"/>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavbarMenuIcon;","import React, {Component} from 'react';\r\nimport { Page, Toolbar, Button, ToolbarButton, Icon } from 'react-onsenui';\r\nimport NavbarMenuIcon from '../NavbarMenuIcon/NavbarMenuIcon';\r\n\r\nclass ToolbarNormal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    handleMenuClick = () => {\r\n        window.toggleOnsMenu();\r\n    }\r\n\r\n    render = () => {\r\n        \r\n        return (<Toolbar>\r\n            <div className=\"left\">\r\n                <ToolbarButton onClick={this.handleMenuClick} className=\"menu-toolbar-btn\">\r\n                    <NavbarMenuIcon />\r\n                </ToolbarButton>\r\n            </div>\r\n            <div className=\"center\">{this.props.name}</div>\r\n        </Toolbar>);\r\n    }\r\n}\r\n\r\nexport default ToolbarNormal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoutesOffersOverview\":\"RoutesOffersOverview_RoutesOffersOverview__CV76E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RoutesList_title__1CauU\",\"fromTo\":\"RoutesList_fromTo__MPGGU\",\"description\":\"RoutesList_description__8BoLd\",\"senderName\":\"RoutesList_senderName__3eF5K\",\"summary\":\"RoutesList_summary__2iNQT\",\"timestamp\":\"RoutesList_timestamp__xZmmX\",\"listItem\":\"RoutesList_listItem__1QpPj\",\"center\":\"RoutesList_center__2rIiJ\",\"image\":\"RoutesList_image__HOuHK\",\"right\":\"RoutesList_right__AjchT\"};"],"sourceRoot":""}