{"version":3,"sources":["components/PersonalChat/PersonalChat.js","stores/PersonalChatStore.js"],"names":["PersonalChat","props","_this","Object","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Chat_Chat__WEBPACK_IMPORTED_MODULE_7__","assign","chatStore","PersonalChatStore","Component","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","init","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_Apps_projectmegaindia_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","wrap","_context","prev","next","getChatsMetas","chatMeta","sent","console","log","isReady","emit","stop","getChatMetaIds","_callee2","_context2","abrupt","getField","_ref3","_callee3","id","key","firebase","snapshot","_context3","firebaseReady","database","ref","concat","once","val","_x","_x2","apply","arguments","getSingleChatMeta","_ref4","_callee4","_ref5","_ref6","title","slug","isLeaf","_context4","Promise","all","map","D_Apps_projectmegaindia_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","ChatMeta","_x3","getChatMetaItem","otherUidSlug","myUid","AuthStore","user","uid","uid1","uid2","trySetChatToUserData","_callee5","ids","_context5","getChatSubjectsFlat","_callee6","_context6","slice","sort","amountOfSlashesSort","getChatSubjects","_callee7","subjectsArray","subjects","_context7","forEach","subject","nestChatSubject","getChatThread","_ref10","_callee8","chatThread","_context8","Error","threads","ChatThread","fromChatMeta","_x4","getAllPersonalChats","_callee9","chats","_context9","readyPromise","isAuthenticated","keys","chat","filter","blocked","_ref12","_callee10","otherUserUid","_context10","set","_x5","setTimeout","_callee11","_context11","t0","t1","AbctractChatStore","__webpack_exports__"],"mappings":"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","file":"static/js/15.d55ff197.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './PersonalChat.css';\nimport Chat from '../Chat/Chat';\nimport PersonalChatStore from '../../stores/PersonalChatStore';\n\nclass PersonalChat extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n        };\n    }\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        return (\n            <div className=\"PersonalChat\">\n                <Chat {...this.props} chatStore={PersonalChatStore} />\n            </div>\n        );\n    }\n}\n\nexport default PersonalChat;\n","import { EventEmitter } from \"events\";\r\nimport { firebaseReady } from \"../lib/authentication\";\r\nimport { ChatMeta } from \"../lib/chats/chat-meta\";\r\nimport { ChatThread } from \"../lib/chats/chat-thread\";\r\nimport AbctractChatStore from \"./AbstractChatStore\";\r\nimport AuthStore from \"./AuthStore\";\r\n\r\nclass PersonalChatStore extends AbctractChatStore {\r\n    constructor() {\r\n        super();\r\n\r\n        this.threads = {};\r\n        this.init();\r\n\r\n        setTimeout(async () => {\r\n            console.log(await this.getAllPersonalChats());\r\n        }, 3000);\r\n    }\r\n\r\n    init = async () => {\r\n        this.chatMeta = await this.getChatsMetas();\r\n        console.log(this.chatMeta);\r\n        this.isReady = true;\r\n        this.emit('change');\r\n    }\r\n\r\n    getChatMetaIds = async () => {\r\n        return [];\r\n    }\r\n\r\n    getField = async (id, key) => {\r\n        const firebase = await firebaseReady;\r\n        const snapshot = await firebase.database().ref(`/chats/personal/${id}/${key}`).once('value');\r\n        return snapshot.val();\r\n    }\r\n\r\n    getSingleChatMeta = async (id) => {\r\n        await firebaseReady;\r\n        const [title, slug, isLeaf] = await Promise.all(\r\n            ['title', 'slug', 'isLeaf'].map(key => this.getField(id, key))\r\n        );\r\n        return new ChatMeta(title, isLeaf, slug, id);\r\n    }\r\n\r\n    getChatMetaItem = otherUidSlug => {\r\n        console.log('getChatMetaItem', otherUidSlug);\r\n        const myUid = AuthStore.user.uid;\r\n        const uid1 = myUid > otherUidSlug ? otherUidSlug : myUid;\r\n        const uid2 = myUid > otherUidSlug ? myUid : otherUidSlug;\r\n        this.trySetChatToUserData(otherUidSlug);\r\n        return {\r\n            \"title\": \"\",\r\n            \"isLeaf\": false,\r\n            \"slug\": otherUidSlug,\r\n            \"id\": `${uid1}/${uid2}`\r\n        };\r\n    }\r\n\r\n    getChatsMetas = async () => {\r\n        await firebaseReady;\r\n        const ids = await this.getChatMetaIds();\r\n        return await Promise.all(ids.map(this.getSingleChatMeta));\r\n    };\r\n\r\n    getChatSubjectsFlat = async () => {\r\n        const chatMeta = await this.getChatsMetas();\r\n        return chatMeta.slice().sort(this.amountOfSlashesSort);\r\n    };\r\n\r\n    getChatSubjects = async () => {\r\n        const subjectsArray = await this.getChatSubjectsFlat();\r\n        const subjects = [];\r\n        subjectsArray.forEach(subject => this.nestChatSubject(subject, subjects));\r\n        return subjects;\r\n    };\r\n\r\n    getChatThread = async chatMeta => {\r\n        if (chatMeta === null) throw new Error('Invalid chat meta');\r\n        if (this.threads[chatMeta.id]) return this.threads[chatMeta.id];\r\n        const firebase = await firebaseReady;\r\n        const chatThread = ChatThread.fromChatMeta(chatMeta, firebase.database().ref(`/chats/personal/${chatMeta.id}/thread`));\r\n        this.threads[chatMeta.id] = chatThread;\r\n        return chatThread;\r\n    };\r\n\r\n    getAllPersonalChats = async () => {\r\n        const firebase = await firebaseReady;\r\n        await AuthStore.readyPromise;\r\n        const loggedIn = AuthStore.isAuthenticated;\r\n        if (!loggedIn) return null;\r\n        const snapshot = await firebase.database()\r\n            .ref(`/users/${AuthStore.user.uid}/personalchatswithusers`)\r\n            .once('value');\r\n        const chats = snapshot.val() || {};\r\n        return Object.keys(chats).map(key => {\r\n            const chat = chats[key];\r\n            chat.uid = key;\r\n            return chat;\r\n        }).filter(chat => chat.blocked !== true);\r\n    }\r\n\r\n    trySetChatToUserData = async (otherUserUid) => {\r\n        const firebase = await firebaseReady;\r\n        await AuthStore.readyPromise;\r\n        const loggedIn = AuthStore.isAuthenticated;\r\n        if (!loggedIn) return false;\r\n        const snapshot = await firebase.database()\r\n            .ref(`/users/${AuthStore.user.uid}/personalchatswithusers/${otherUserUid}`)\r\n            .once('value');\r\n        if (snapshot.val() === null) {\r\n            await await firebase.database()\r\n                .ref(`/users/${AuthStore.user.uid}/personalchatswithusers/${otherUserUid}`)\r\n                .set({\r\n                    blocked: false\r\n                });\r\n            const snapshot2 = await firebase.database()\r\n                .ref(`/users/${otherUserUid}/personalchatswithusers/${AuthStore.user.uid}`)\r\n                .once('value');\r\n            if (snapshot2.val() === null) {\r\n                await await firebase.database()\r\n                    .ref(`/users/${otherUserUid}/personalchatswithusers/${AuthStore.user.uid}`)\r\n                    .set({\r\n                        blocked: false\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new PersonalChatStore();\r\n"],"sourceRoot":""}